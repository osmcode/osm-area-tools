#-----------------------------------------------------------------------------
#
#  Configuration for continuous integration service at travis-ci.org
#
#-----------------------------------------------------------------------------

language: generic

sudo: false

dist: trusty

#-----------------------------------------------------------------------------

matrix:
  include:

    # 1/ Linux Clang Builds
    - os: linux
      compiler: linux-clang38-release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['clang-3.8', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='clang++-3.8' BUILD_TYPE='Release'

    - os: linux
      compiler: linux-clang38-dev
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['clang-3.8', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='clang++-3.8' BUILD_TYPE='Dev'


    - os: linux
      compiler: linux-clang39-release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['clang-3.9', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='clang++-3.9' BUILD_TYPE='Release'

    - os: linux
      compiler: linux-clang39-dev
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['clang-3.9', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='clang++-3.9' BUILD_TYPE='Dev'


    - os: linux
      compiler: linux-clang40-release
      addons:
        apt:
          sources: ['llvm-toolchain-trusty-4.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-4.0', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='clang++-4.0' BUILD_TYPE='Release'

    - os: linux
      compiler: linux-clang40-dev
      addons:
        apt:
          sources: ['llvm-toolchain-trusty-4.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-4.0', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='clang++-4.0' BUILD_TYPE='Dev'


    - os: linux
      compiler: linux-clang50-release
      addons:
        apt:
          sources: ['llvm-toolchain-trusty-5.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-5.0', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='clang++-5.0' BUILD_TYPE='Release'

    - os: linux
      compiler: linux-clang50-dev
      addons:
        apt:
          sources: ['llvm-toolchain-trusty-5.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-5.0', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='clang++-5.0' BUILD_TYPE='Dev'


    # 2/ Linux GCC Builds
    - os: linux
      compiler: linux-gcc48-release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.8', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='g++-4.8' COMPILER_FLAGS='-Wno-return-type' BUILD_TYPE='Release'

    - os: linux
      compiler: linux-gcc48-dev
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.8', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='g++-4.8' COMPILER_FLAGS='-Wno-return-type' BUILD_TYPE='Dev'


    - os: linux
      compiler: linux-gcc49-release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='g++-4.9' BUILD_TYPE='Release'

    - os: linux
      compiler: linux-gcc49-dev
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='g++-4.9' BUILD_TYPE='Dev'


    - os: linux
      compiler: linux-gcc5-release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='g++-5' BUILD_TYPE='Release'

    - os: linux
      compiler: linux-gcc5-dev
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='g++-5' BUILD_TYPE='Dev'


    - os: linux
      compiler: linux-gcc6-release
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='g++-6' BUILD_TYPE='Release'

    - os: linux
      compiler: linux-gcc6-dev
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'libboost1.55-dev', 'libgdal-dev', 'libgeos++-dev', 'libproj-dev', 'libsqlite3-dev']
      env: COMPILER='g++-6' BUILD_TYPE='Dev'


    # 3/ OSX Clang Builds
    - os: osx
      osx_image: xcode6.4
      compiler: xcode64-clang-release
      env: COMPILER='clang++' BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode6.4
      compiler: xcode64-clang-dev
      env: COMPILER='clang++' BUILD_TYPE='Dev'


    - os: osx
      osx_image: xcode7
      compiler: xcode7-clang-release
      env: COMPILER='clang++' BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode7
      compiler: xcode7-clang-dev
      env: COMPILER='clang++' BUILD_TYPE='Dev'


    - os: osx
      osx_image: xcode8.3
      compiler: xcode8-clang-release
      env: COMPILER='clang++' BUILD_TYPE='Release'

    - os: osx
      osx_image: xcode8.3
      compiler: xcode8-clang-dev
      env: COMPILER='clang++' BUILD_TYPE='Dev'

#-----------------------------------------------------------------------------

install:
  - git clone --quiet --depth 1 https://github.com/osmcode/libosmium.git ../libosmium
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install cmake || true
    fi
  - cmake --version

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build && cd build
  - CXX=${COMPILER} CXXFLAGS=${COMPILER_FLAGS} cmake -LA .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE}

script:
  - make VERBOSE=1

#-----------------------------------------------------------------------------
