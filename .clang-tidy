---
Checks: '*,-altera-*,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-fuchsia-*,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-no-array-decay,-llvmlibc-*,-modernize-avoid-c-arrays,-modernize-use-trailing-return-type,-readability-implicit-bool-conversion,-readability-magic-numbers'
#
#  For a list of check options, see:
#  http://clang.llvm.org/extra/clang-tidy/checks/list.html
#
#  Disabled checks:
#
#  altera-*
#    Not applicable.
#
#  cppcoreguidelines-avoid-c-arrays
#  hicpp-avoid-c-arrays
#  modernize-avoid-c-arrays
#    Makes sense for some array, but especially for char arrays using
#    std::array isn't a good solution.
#
#  cppcoreguidelines-avoid-magic-numbers
#  readability-magic-numbers
#    Generally good advice, but there are too many places where this is
#    useful, for instance in tests.
#
#  cppcoreguidelines-pro-bounds-array-to-pointer-decay
#  hicpp-no-array-decay
#    Limited use and many false positives including for all asserts.
#
#  cppcoreguidelines-pro-bounds-constant-array-index
#    I don't want to use gsl.
#
#  cppcoreguidelines-pro-bounds-pointer-arithmetic
#    Difficult to get by without it...
#
#  fuchsia-*
#    Much too strict.
#
#  google-runtime-references
#    This is just a matter of preference.
#
#  llvmlibc-*
#    Not applicable.
#
#  modernize-use-trailing-return-type
#    I am not quite that modern.
#
#  readability-implicit-bool-conversion
#    I don't think this makes the code more readable.
#
WarningsAsErrors: '*'
...
